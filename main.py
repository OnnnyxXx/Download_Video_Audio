import asyncio
import os
import random
import time

from aiogram.dispatcher.filters import Text
import aiogram
import executor
from aiogram import Bot, Dispatcher, types
from pytube import YouTube

token = '6136167557:AAHEohAi6jN0yQERVRuUp6AdaGKi3StxoYU'
bot = Bot(token)
dp = Dispatcher(bot)

"""
–ö–Ω–æ–ø–∫—É –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è —Å–∫–∞—á–∫–∏ —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ

"""


@dp.message_handler(commands=['start'])
async def start_commands(message: types.Message):
    start_button = ["–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ"]  # "–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ", '–°–∫–∞—á–∞—Ç—å –ê—É–¥–∏–æ'
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*start_button)

    await message.answer('–ù—É –ø—Ä–∏–≤–µ—Ç {0.first_name} üëã'.format(message.from_user), reply_markup=keyboard)

    photo = open("hello_user/kiss-lip-kiss.gif", 'rb')
    await bot.send_animation(message.chat.id, photo)


@dp.message_handler(Text(equals='–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ'))
async def get_link_audio(message: types.Message):
    await message.answer('–ù—É–∂–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–æ—Å.....')


# @dp.message_handler(Text(equals='–°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ'))
# async def get_link_video(message: types.Message):
#     await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.")


@dp.message_handler()
async def download_audio(message: types.Message):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –ê—É–¥–∏–æ"""
    try:
        link_audio = YouTube(message.text)
        stream = link_audio.streams.filter(only_audio=True).first()

        await message.answer('–î–æ–ª–≥–æ –∫–∞—á–∞–µ—Ç, –ø–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ –º–µ–Ω—è')
        time.sleep(4)
        photo = open('photo_blat/' + random.choice(os.listdir('photo_blat')), 'rb')
        await bot.send_photo(message.chat.id, photo)

        audio_path = f'–ê—É–¥–∏–æ/{link_audio.title}'
        stream.download(output_path='–ê—É–¥–∏–æ/', filename=link_audio.title)

        await message.answer('–í—ã–∑—ã–≤–∞—é –ø–æ–ª–∏—Ü–∏—é –Ω–∞ –≤–∞—à –∞–¥—Ä–µ—Å')
        time.sleep(5)
        await message.answer("–®—É—Ç–∫–∞....")

        with open(audio_path, 'rb') as audio:
            await bot.send_audio(message.chat.id, audio, caption=f'–ê—É–¥–∏–æ –æ—Ç –≤–∏–¥–µ–æ: {link_audio.title}')
        await message.answer('–ê—É–¥–∏–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')

        os.remove(audio_path)
    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –∞—É–¥–∏–æ")

    """–ó–∞–≥—Ä—É–∑–∫–∞ –í–∏–¥–µ–æ"""
    try:
        link_video = YouTube(message.text)

        video_path = f'–í–∏–¥–µ–æ/{link_video.title}'
        stream = link_video.streams.get_highest_resolution()
        time.sleep(4)
        photo = open('photo_blat/' + random.choice(os.listdir('photo_blat')), 'rb')
        await bot.send_photo(message.chat.id, photo)

        stream.download(output_path='–í–∏–¥–µ–æ/', filename=link_video.title)
        await message.answer('–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ')
        time.sleep(3)
        await message.answer("–í—à–∏–≤–∞—é –º–∞–π–Ω–µ—ÄüëÄ")
        with open(video_path, 'rb') as video:
            await bot.send_video(message.chat.id, video, caption=link_video.title)
        await message.answer(f"–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ!")

        os.remove(video_path)
    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ")


async def main():
    await dp.start_polling()


if __name__ == "__main__":
    asyncio.run(main())
